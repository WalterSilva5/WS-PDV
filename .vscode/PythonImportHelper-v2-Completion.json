[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "warnings",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "warnings",
        "description": "warnings",
        "detail": "warnings",
        "documentation": {}
    },
    {
        "label": "management",
        "importPath": "django.core",
        "description": "django.core",
        "isExtraImport": true,
        "detail": "django.core",
        "documentation": {}
    },
    {
        "label": "management",
        "importPath": "django.core",
        "description": "django.core",
        "isExtraImport": true,
        "detail": "django.core",
        "documentation": {}
    },
    {
        "label": "glob",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "glob",
        "description": "glob",
        "detail": "glob",
        "documentation": {}
    },
    {
        "label": "shutil",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shutil",
        "description": "shutil",
        "detail": "shutil",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "distutils.sysconfig",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "distutils.sysconfig",
        "description": "distutils.sysconfig",
        "detail": "distutils.sysconfig",
        "documentation": {}
    },
    {
        "label": "tempfile",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tempfile",
        "description": "tempfile",
        "detail": "tempfile",
        "documentation": {}
    },
    {
        "label": "subprocess",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess",
        "description": "subprocess",
        "detail": "subprocess",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "wspdv.models",
        "description": "wspdv.models",
        "isExtraImport": true,
        "detail": "wspdv.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "adicionar_produto",
        "importPath": "wspdv.views.produtos",
        "description": "wspdv.views.produtos",
        "isExtraImport": true,
        "detail": "wspdv.views.produtos",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "wspdv.views.views",
        "description": "wspdv.views.views",
        "isExtraImport": true,
        "detail": "wspdv.views.views",
        "documentation": {}
    },
    {
        "label": "QUrl",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QMainWindow",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWebEngineView",
        "importPath": "PyQt5.QtWebEngineWidgets",
        "description": "PyQt5.QtWebEngineWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWebEngineWidgets",
        "documentation": {}
    },
    {
        "label": "QWebEnginePage",
        "importPath": "PyQt5.QtWebEngineWidgets",
        "description": "PyQt5.QtWebEngineWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWebEngineWidgets",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "rest_framework",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "rest_framework",
        "description": "rest_framework",
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "response",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "ProdutoViewSet",
        "importPath": "api.views",
        "description": "api.views",
        "isExtraImport": true,
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.conf.urls",
        "description": "django.conf.urls",
        "isExtraImport": true,
        "detail": "django.conf.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.conf.urls",
        "description": "django.conf.urls",
        "isExtraImport": true,
        "detail": "django.conf.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls.conf",
        "description": "django.urls.conf",
        "isExtraImport": true,
        "detail": "django.urls.conf",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "ProdutoSerializer",
        "importPath": "api.serializers",
        "description": "api.serializers",
        "isExtraImport": true,
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.activate_this",
        "description": "antigo.env_wspdv.Scripts.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "antigo.env_wspdv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.activate_this",
        "description": "antigo.env_wspdv.Scripts.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]",
        "detail": "antigo.env_wspdv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.activate_this",
        "description": "antigo.env_wspdv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "antigo.env_wspdv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.activate_this",
        "description": "antigo.env_wspdv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "antigo.env_wspdv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.activate_this",
        "description": "antigo.env_wspdv.Scripts.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "antigo.env_wspdv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.activate_this",
        "description": "antigo.env_wspdv.Scripts.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "antigo.env_wspdv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.activate_this",
        "description": "antigo.env_wspdv.Scripts.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "antigo.env_wspdv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.activate_this",
        "description": "antigo.env_wspdv.Scripts.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "antigo.env_wspdv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "Tee",
        "kind": 6,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "class Tee:\n    def __init__(self, file):\n        self.f = file\n    def write(self, what):\n        if self.f is not None:\n            try:\n                self.f.write(what.replace(\"\\n\", \"\\r\\n\"))\n            except IOError:\n                pass\n        tee_f.write(what)",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "CopyTo",
        "kind": 2,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "def CopyTo(desc, src, dest):\n    import win32api, win32con\n    while 1:\n        try:\n            win32api.CopyFile(src, dest, 0)\n            return\n        except win32api.error as details:\n            if details.winerror==5: # access denied - user not admin.\n                raise\n            if silent:",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "LoadSystemModule",
        "kind": 2,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "def LoadSystemModule(lib_dir, modname):\n    # See if this is a debug build.\n    import importlib.util, importlib.machinery\n    suffix = '_d' if '_d.pyd' in importlib.machinery.EXTENSION_SUFFIXES else ''\n    filename = \"%s%d%d%s.dll\" % \\\n               (modname, sys.version_info[0], sys.version_info[1], suffix)\n    filename = os.path.join(lib_dir, \"pywin32_system32\", filename)\n    loader = importlib.machinery.ExtensionFileLoader(modname, filename)\n    spec = importlib.machinery.ModuleSpec(name=modname, loader=loader, origin=filename)\n    mod = importlib.util.module_from_spec(spec)",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "SetPyKeyVal",
        "kind": 2,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "def SetPyKeyVal(key_name, value_name, value):\n    root_hkey = get_root_hkey()\n    root_key = winreg.OpenKey(root_hkey, root_key_name)\n    try:\n        my_key = winreg.CreateKey(root_key, key_name)\n        try:\n            winreg.SetValueEx(my_key, value_name, 0, winreg.REG_SZ, value)\n        finally:\n            my_key.Close()\n    finally:",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "RegisterCOMObjects",
        "kind": 2,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "def RegisterCOMObjects(register = 1):\n    import win32com.server.register\n    if register:\n        func = win32com.server.register.RegisterClasses\n    else:\n        func = win32com.server.register.UnregisterClasses\n    flags = {}\n    if not verbose:\n        flags['quiet']=1\n    for module, klass_name in com_modules:",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "RegisterPythonwin",
        "kind": 2,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "def RegisterPythonwin(register=True):\n    \"\"\" Add (or remove) Pythonwin to context menu for python scripts.\n        ??? Should probably also add Edit command for pys files also.\n        Also need to remove these keys on uninstall, but there's no function\n            like file_created to add registry entries to uninstall log ???\n    \"\"\"\n    import os\n    lib_dir = distutils.sysconfig.get_python_lib(plat_specific=1)\n    classes_root=get_root_hkey()\n    ## Installer executable doesn't seem to pass anything to postinstall script indicating if it's a debug build,",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "get_shortcuts_folder",
        "kind": 2,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "def get_shortcuts_folder():\n    if get_root_hkey()==winreg.HKEY_LOCAL_MACHINE:\n        try:\n            fldr = get_special_folder_path(\"CSIDL_COMMON_PROGRAMS\")\n        except OSError:\n            # No CSIDL_COMMON_PROGRAMS on this platform\n            fldr = get_special_folder_path(\"CSIDL_PROGRAMS\")\n    else:\n        # non-admin install - always goes in this user's start menu.\n        fldr = get_special_folder_path(\"CSIDL_PROGRAMS\")",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "get_system_dir",
        "kind": 2,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "def get_system_dir():\n    import win32api # we assume this exists.\n    try:\n        import pythoncom\n        import win32process\n        from win32com.shell import shell, shellcon\n        try:\n            if win32process.IsWow64Process():\n                return shell.SHGetSpecialFolderPath(0,shellcon.CSIDL_SYSTEMX86)\n            return shell.SHGetSpecialFolderPath(0,shellcon.CSIDL_SYSTEM)",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "fixup_dbi",
        "kind": 2,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "def fixup_dbi():\n    # We used to have a dbi.pyd with our .pyd files, but now have a .py file.\n    # If the user didn't uninstall, they will find the .pyd which will cause\n    # problems - so handle that.\n    import win32api, win32con\n    pyd_name = os.path.join(os.path.dirname(win32api.__file__), \"dbi.pyd\")\n    pyd_d_name = os.path.join(os.path.dirname(win32api.__file__), \"dbi_d.pyd\")\n    py_name = os.path.join(os.path.dirname(win32con.__file__), \"dbi.py\")\n    for this_pyd in (pyd_name, pyd_d_name):\n        this_dest = this_pyd + \".old\"",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "install",
        "kind": 2,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "def install(lib_dir):\n    import traceback\n    # The .pth file is now installed as a regular file.\n    # Create the .pth file in the site-packages dir, and use only relative paths\n    # We used to write a .pth directly to sys.prefix - clobber it.\n    if os.path.isfile(os.path.join(sys.prefix, \"pywin32.pth\")):\n        os.unlink(os.path.join(sys.prefix, \"pywin32.pth\"))\n    # The .pth may be new and therefore not loaded in this session.\n    # Setup the paths just in case.\n    for name in \"win32 win32\\\\lib Pythonwin\".split():",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "uninstall",
        "kind": 2,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "def uninstall(lib_dir):\n    # First ensure our system modules are loaded from pywin32_system, so\n    # we can remove the ones we copied...\n    LoadSystemModule(lib_dir, \"pywintypes\")\n    LoadSystemModule(lib_dir, \"pythoncom\")\n    try:\n        RegisterCOMObjects(False)\n    except Exception as why:\n        print(\"Failed to unregister COM objects: %s\" % (why,))\n    try:",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "verify_destination",
        "kind": 2,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "def verify_destination(location):\n    if not os.path.isdir(location):\n        raise argparse.ArgumentTypeError(\"Path \\\"{}\\\" does not exist!\".format(location))\n    return location\nif __name__ == '__main__':\n    import argparse\n    parser = argparse.ArgumentParser(formatter_class=argparse.RawDescriptionHelpFormatter,\n                                     description=\"\"\"A post-install script for the pywin32 extensions.\n    * Typical usage:\n    > python pywin32_postinstall.py -install",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "tee_f",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "tee_f = open(os.path.join(tempfile.gettempdir(), 'pywin32_postinstall.log'), \"w\")\nclass Tee:\n    def __init__(self, file):\n        self.f = file\n    def write(self, what):\n        if self.f is not None:\n            try:\n                self.f.write(what.replace(\"\\n\", \"\\r\\n\"))\n            except IOError:\n                pass",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "sys.stderr",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "sys.stderr = Tee(sys.stderr)\nsys.stdout = Tee(sys.stdout)\ncom_modules = [\n    # module_name,                      class_names\n    (\"win32com.servers.interp\",         \"Interpreter\"),\n    (\"win32com.servers.dictionary\",     \"DictionaryPolicy\"),\n    (\"win32com.axscript.client.pyscript\",\"PyScript\"),\n]\n# Is this a 'silent' install - ie, avoid all dialogs.\n# Different than 'verbose'",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "sys.stdout",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "sys.stdout = Tee(sys.stdout)\ncom_modules = [\n    # module_name,                      class_names\n    (\"win32com.servers.interp\",         \"Interpreter\"),\n    (\"win32com.servers.dictionary\",     \"DictionaryPolicy\"),\n    (\"win32com.axscript.client.pyscript\",\"PyScript\"),\n]\n# Is this a 'silent' install - ie, avoid all dialogs.\n# Different than 'verbose'\nsilent = 0",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "com_modules",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "com_modules = [\n    # module_name,                      class_names\n    (\"win32com.servers.interp\",         \"Interpreter\"),\n    (\"win32com.servers.dictionary\",     \"DictionaryPolicy\"),\n    (\"win32com.axscript.client.pyscript\",\"PyScript\"),\n]\n# Is this a 'silent' install - ie, avoid all dialogs.\n# Different than 'verbose'\nsilent = 0\n# Verbosity of output messages.",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "silent",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "silent = 0\n# Verbosity of output messages.\nverbose = 1\nver_string = \"%d.%d\" % (sys.version_info[0], sys.version_info[1])\nroot_key_name = \"Software\\\\Python\\\\PythonCore\\\\\" + ver_string\ntry:\n    # When this script is run from inside the bdist_wininst installer,\n    # file_created() and directory_created() are additional builtin\n    # functions which write lines to Python23\\pywin32-install.log. This is\n    # a list of actions for the uninstaller, the format is inspired by what",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "verbose",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "verbose = 1\nver_string = \"%d.%d\" % (sys.version_info[0], sys.version_info[1])\nroot_key_name = \"Software\\\\Python\\\\PythonCore\\\\\" + ver_string\ntry:\n    # When this script is run from inside the bdist_wininst installer,\n    # file_created() and directory_created() are additional builtin\n    # functions which write lines to Python23\\pywin32-install.log. This is\n    # a list of actions for the uninstaller, the format is inspired by what\n    # the Wise installer also creates.\n    file_created",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "ver_string",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "ver_string = \"%d.%d\" % (sys.version_info[0], sys.version_info[1])\nroot_key_name = \"Software\\\\Python\\\\PythonCore\\\\\" + ver_string\ntry:\n    # When this script is run from inside the bdist_wininst installer,\n    # file_created() and directory_created() are additional builtin\n    # functions which write lines to Python23\\pywin32-install.log. This is\n    # a list of actions for the uninstaller, the format is inspired by what\n    # the Wise installer also creates.\n    file_created\n    is_bdist_wininst = True",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "root_key_name",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "description": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "peekOfCode": "root_key_name = \"Software\\\\Python\\\\PythonCore\\\\\" + ver_string\ntry:\n    # When this script is run from inside the bdist_wininst installer,\n    # file_created() and directory_created() are additional builtin\n    # functions which write lines to Python23\\pywin32-install.log. This is\n    # a list of actions for the uninstaller, the format is inspired by what\n    # the Wise installer also creates.\n    file_created\n    is_bdist_wininst = True\nexcept NameError:",
        "detail": "antigo.env_wspdv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "run_test",
        "kind": 2,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_testall",
        "description": "antigo.env_wspdv.Scripts.pywin32_testall",
        "peekOfCode": "def run_test(script, cmdline_rest=\"\"):\n    dirname, scriptname = os.path.split(script)\n    # some tests prefer to be run from their directory.\n    cmd = [sys.executable, \"-u\", scriptname] + cmdline_rest.split()\n    print(script)\n    popen = subprocess.Popen(cmd, shell=True, cwd=dirname,\n                             stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    data = popen.communicate()[0]\n    if sys.version_info > (3,):\n        sys.stdout.write(data.decode('latin-1'))",
        "detail": "antigo.env_wspdv.Scripts.pywin32_testall",
        "documentation": {}
    },
    {
        "label": "find_and_run",
        "kind": 2,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_testall",
        "description": "antigo.env_wspdv.Scripts.pywin32_testall",
        "peekOfCode": "def find_and_run(possible_locations, script, cmdline_rest=\"\"):\n    for maybe in possible_locations:\n        if os.path.isfile(os.path.join(maybe, script)):\n            run_test(os.path.abspath(os.path.join(maybe, script)), cmdline_rest)\n            break\n    else:\n        raise RuntimeError(\"Failed to locate the test script '%s' in one of %s\"\n                           % (script, possible_locations))\nif __name__ == '__main__':\n    import argparse",
        "detail": "antigo.env_wspdv.Scripts.pywin32_testall",
        "documentation": {}
    },
    {
        "label": "this_dir",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_testall",
        "description": "antigo.env_wspdv.Scripts.pywin32_testall",
        "peekOfCode": "this_dir = os.path.dirname(__file__)\nsite_packages = [site.getusersitepackages(), ] + site.getsitepackages()\n# Run a test using subprocess and wait for the result.\n# If we get an returncode != 0, we know that there was an error.\ndef run_test(script, cmdline_rest=\"\"):\n    dirname, scriptname = os.path.split(script)\n    # some tests prefer to be run from their directory.\n    cmd = [sys.executable, \"-u\", scriptname] + cmdline_rest.split()\n    print(script)\n    popen = subprocess.Popen(cmd, shell=True, cwd=dirname,",
        "detail": "antigo.env_wspdv.Scripts.pywin32_testall",
        "documentation": {}
    },
    {
        "label": "site_packages",
        "kind": 5,
        "importPath": "antigo.env_wspdv.Scripts.pywin32_testall",
        "description": "antigo.env_wspdv.Scripts.pywin32_testall",
        "peekOfCode": "site_packages = [site.getusersitepackages(), ] + site.getsitepackages()\n# Run a test using subprocess and wait for the result.\n# If we get an returncode != 0, we know that there was an error.\ndef run_test(script, cmdline_rest=\"\"):\n    dirname, scriptname = os.path.split(script)\n    # some tests prefer to be run from their directory.\n    cmd = [sys.executable, \"-u\", scriptname] + cmdline_rest.split()\n    print(script)\n    popen = subprocess.Popen(cmd, shell=True, cwd=dirname,\n                             stdout=subprocess.PIPE, stderr=subprocess.STDOUT)",
        "detail": "antigo.env_wspdv.Scripts.pywin32_testall",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "antigo.project.asgi",
        "description": "antigo.project.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "antigo.project.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'ts)uoa5^szx&0#c#un__==4go1n8xjm#r9d0%11--+wo71)#0z'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "SECRET_KEY = 'ts)uoa5^szx&0#c#un__==4go1n8xjm#r9d0%11--+wo71)#0z'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'wspdv',   ",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'wspdv',   \n]\nMIDDLEWARE = [",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'project.urls'",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "ROOT_URLCONF = 'project.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['wspdv/templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['wspdv/templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "WSGI_APPLICATION = 'project.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = \"static/\" #usado durante o desenvolvimento\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') #usado durante a produção",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = \"static/\" #usado durante o desenvolvimento\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') #usado durante a produção",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = \"static/\" #usado durante o desenvolvimento\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') #usado durante a produção",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = \"static/\" #usado durante o desenvolvimento\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') #usado durante a produção",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = \"static/\" #usado durante o desenvolvimento\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') #usado durante a produção",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "STATIC_URL = \"static/\" #usado durante o desenvolvimento\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') #usado durante a produção",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "antigo.project.settings",
        "description": "antigo.project.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') #usado durante a produção",
        "detail": "antigo.project.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "antigo.project.urls",
        "description": "antigo.project.urls",
        "peekOfCode": "urlpatterns = [\n   path('admin/', admin.site.urls),\n   path('', include('wspdv.urls')),\n]",
        "detail": "antigo.project.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "antigo.project.wsgi",
        "description": "antigo.project.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "antigo.project.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "antigo.wspdv.migrations.0001_initial",
        "description": "antigo.wspdv.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Produto',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('codigo', models.IntegerField(verbose_name='codigo')),",
        "detail": "antigo.wspdv.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "antigo.wspdv.migrations.0002_auto_20210505_1207",
        "description": "antigo.wspdv.migrations.0002_auto_20210505_1207",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('wspdv', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='produto',\n            name='codigo',\n            field=models.IntegerField(unique=True, verbose_name='codigo'),\n        ),",
        "detail": "antigo.wspdv.migrations.0002_auto_20210505_1207",
        "documentation": {}
    },
    {
        "label": "caixa",
        "kind": 2,
        "importPath": "antigo.wspdv.views.caixa",
        "description": "antigo.wspdv.views.caixa",
        "peekOfCode": "def caixa(request):\n    return render(request, 'caixa.html')",
        "detail": "antigo.wspdv.views.caixa",
        "documentation": {}
    },
    {
        "label": "clientes",
        "kind": 2,
        "importPath": "antigo.wspdv.views.clientes",
        "description": "antigo.wspdv.views.clientes",
        "peekOfCode": "def clientes(request):\n    return render(request, 'clientes.html')",
        "detail": "antigo.wspdv.views.clientes",
        "documentation": {}
    },
    {
        "label": "produtos",
        "kind": 2,
        "importPath": "antigo.wspdv.views.produtos",
        "description": "antigo.wspdv.views.produtos",
        "peekOfCode": "def produtos(request):\n    produtos = list(Produto.objects.all().values())[:]\n    return render(request, 'produtos.html',{\"produtos\":produtos})\ndef adicionar_produto(request):\n    descricao = request.POST[\"descricao\"]\n    preco = request.POST[\"preco\"]\n    codigo = request.POST[\"codigo\"]\n    produto = Produto(descricao=descricao, preco=preco, codigo=codigo)\n    produto.save()\n    return render(request, \"produtos.html\")",
        "detail": "antigo.wspdv.views.produtos",
        "documentation": {}
    },
    {
        "label": "adicionar_produto",
        "kind": 2,
        "importPath": "antigo.wspdv.views.produtos",
        "description": "antigo.wspdv.views.produtos",
        "peekOfCode": "def adicionar_produto(request):\n    descricao = request.POST[\"descricao\"]\n    preco = request.POST[\"preco\"]\n    codigo = request.POST[\"codigo\"]\n    produto = Produto(descricao=descricao, preco=preco, codigo=codigo)\n    produto.save()\n    return render(request, \"produtos.html\")",
        "detail": "antigo.wspdv.views.produtos",
        "documentation": {}
    },
    {
        "label": "vendas",
        "kind": 2,
        "importPath": "antigo.wspdv.views.vendas",
        "description": "antigo.wspdv.views.vendas",
        "peekOfCode": "def vendas(request):\n    return render(request, 'vendas.html')",
        "detail": "antigo.wspdv.views.vendas",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "antigo.wspdv.views.views",
        "description": "antigo.wspdv.views.views",
        "peekOfCode": "def index(request):\n    return render(request, 'index.html')",
        "detail": "antigo.wspdv.views.views",
        "documentation": {}
    },
    {
        "label": "WspdvConfig",
        "kind": 6,
        "importPath": "antigo.wspdv.apps",
        "description": "antigo.wspdv.apps",
        "peekOfCode": "class WspdvConfig(AppConfig):\n    name = 'wspdv'",
        "detail": "antigo.wspdv.apps",
        "documentation": {}
    },
    {
        "label": "Produto",
        "kind": 6,
        "importPath": "antigo.wspdv.models",
        "description": "antigo.wspdv.models",
        "peekOfCode": "class Produto(models.Model):\n    codigo = models.IntegerField(\"codigo\", unique=True, blank=False)\n    descricao = models.CharField(\"descricao\", max_length=200, blank=False)\n    preco = models.DecimalField(\"preco\", max_digits=19, decimal_places=10, blank=False)",
        "detail": "antigo.wspdv.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "antigo.wspdv.urls",
        "description": "antigo.wspdv.urls",
        "peekOfCode": "urlpatterns = [\n   path('', index, name='index'),\n   path('vendas', vendas, name='vendas'),\n   #produtos\n   path('produtos', produtos, name='produtos'),\n   path('produtos/adicionar_produto', adicionar_produto, name=\"adicionar_produto\"),\n   path('clientes', clientes, name='clientes'),\n   path('caixa', caixa, name='caixa'),\n]",
        "detail": "antigo.wspdv.urls",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "antigo.manage",
        "description": "antigo.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "antigo.manage",
        "documentation": {}
    },
    {
        "label": "CustomWebEnginePage",
        "kind": 6,
        "importPath": "antigo.WindowsAPP",
        "description": "antigo.WindowsAPP",
        "peekOfCode": "class CustomWebEnginePage(QWebEnginePage):\n    \"\"\" Custom WebEnginePage to customize how we handle link navigation \"\"\"\n    # Store external windows.\n    external_windows = []\n    def acceptNavigationRequest(self, url,  _type, isMainFrame):\n        def onLoadFinished(ok):\n            if ok:\n                self.w.page().runJavaScript(\"document.getElementById('cupom')\", imprimir)\n        def imprimir(html):\n            print(html)",
        "detail": "antigo.WindowsAPP",
        "documentation": {}
    },
    {
        "label": "MainWindow",
        "kind": 6,
        "importPath": "antigo.WindowsAPP",
        "description": "antigo.WindowsAPP",
        "peekOfCode": "class MainWindow(QMainWindow):\n    def __init__(self, *args, **kwargs):\n        super(MainWindow, self).__init__(*args, **kwargs)\n        self.browser = QWebEngineView()\n        self.browser.setPage(CustomWebEnginePage(self))\n        self.browser.setUrl(QUrl(\"http://localhost\"))\n        self.setCentralWidget(self.browser)\napp = QApplication(sys.argv)\nwindow = MainWindow()\napp.exec_()",
        "detail": "antigo.WindowsAPP",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "antigo.WindowsAPP",
        "description": "antigo.WindowsAPP",
        "peekOfCode": "app = QApplication(sys.argv)\nwindow = MainWindow()\napp.exec_()",
        "detail": "antigo.WindowsAPP",
        "documentation": {}
    },
    {
        "label": "window",
        "kind": 5,
        "importPath": "antigo.WindowsAPP",
        "description": "antigo.WindowsAPP",
        "peekOfCode": "window = MainWindow()\napp.exec_()",
        "detail": "antigo.WindowsAPP",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0001_initial",
        "description": "api.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Produto',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('codigo', models.IntegerField(unique=True)),",
        "detail": "api.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ApiConfig",
        "kind": 6,
        "importPath": "api.apps",
        "description": "api.apps",
        "peekOfCode": "class ApiConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'api'",
        "detail": "api.apps",
        "documentation": {}
    },
    {
        "label": "Produto",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Produto(models.Model):\n    codigo = models.IntegerField(unique=True, blank=False)\n    descricao = models.CharField(max_length=200, blank=False)\n    preco = models.DecimalField(max_digits=19, decimal_places=10, blank=False)\n    class Meta:\n        verbose_name = 'Produto'\n        verbose_name_plural = 'Produtos'\n    def __str__(self):\n        return self.descricao",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "ProdutoSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class ProdutoSerializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = Produto\n        fields = ('descricao', 'codigo', 'preco', 'pk')",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register(r'produtos', ProdutoViewSet)\nurlpatterns = [\n    path('', include(router.urls)),\n    # path('api/token/', TokenObtainPairView.as_view()),\n    # path('api/token/refresh', TokenRefreshView.as_view())\n]",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),\n    # path('api/token/', TokenObtainPairView.as_view()),\n    # path('api/token/refresh', TokenRefreshView.as_view())\n]",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "ProdutoViewSet",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ProdutoViewSet(viewsets.ModelViewSet):\n    queryset = Produto.objects.all()\n    serializer_class = ProdutoSerializer\n    def destroy(self, *args, **kwargs):\n        serializer = self.get_serializer(self.get_object())\n        super().destroy(*args, **kwargs)\n        return response.Response(serializer.data, status=status.HTTP_200_OK)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "pdvenv.Scripts.activate_this",
        "description": "pdvenv.Scripts.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "pdvenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "pdvenv.Scripts.activate_this",
        "description": "pdvenv.Scripts.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]",
        "detail": "pdvenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "pdvenv.Scripts.activate_this",
        "description": "pdvenv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "pdvenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "pdvenv.Scripts.activate_this",
        "description": "pdvenv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "pdvenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "pdvenv.Scripts.activate_this",
        "description": "pdvenv.Scripts.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "pdvenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "pdvenv.Scripts.activate_this",
        "description": "pdvenv.Scripts.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "pdvenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "pdvenv.Scripts.activate_this",
        "description": "pdvenv.Scripts.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "pdvenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "pdvenv.Scripts.activate_this",
        "description": "pdvenv.Scripts.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "pdvenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "projetoapi.asgi",
        "description": "projetoapi.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "projetoapi.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-p#t28top$z!yct50)f3@165@0j98j!bz0x-b!+$n5trdh+@g)('\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['*']\nCORS_ORIGIN_ALLOW_ALL = True\n# Application definition",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-p#t28top$z!yct50)f3@165@0j98j!bz0x-b!+$n5trdh+@g)('\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['*']\nCORS_ORIGIN_ALLOW_ALL = True\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = ['*']\nCORS_ORIGIN_ALLOW_ALL = True\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['*']\nCORS_ORIGIN_ALLOW_ALL = True\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ORIGIN_ALLOW_ALL",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "CORS_ORIGIN_ALLOW_ALL = True\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'api',",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'api',\n    'rest_framework',\n    'rest_framework.authtoken',",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'projetoapi.urls'",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "ROOT_URLCONF = 'projetoapi.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "WSGI_APPLICATION = 'projetoapi.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "projetoapi.settings",
        "description": "projetoapi.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "projetoapi.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "projetoapi.urls",
        "description": "projetoapi.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include('api.urls')),\n]",
        "detail": "projetoapi.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "projetoapi.wsgi",
        "description": "projetoapi.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "projetoapi.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'projetoapi.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]